扩展结构体

zend_module_entry yii_module_entry = {
	STANDARD_MODULE_HEADER,
	"yii",
	yii_functions,
	PHP_MINIT(yii),
	PHP_MSHUTDOWN(yii),
	PHP_RINIT(yii),
	PHP_RSHUTDOWN(yii),
	PHP_MINFO(yii),
	PHP_YII_VERSION,
	STANDARD_MODULE_PROPERTIES
};

typedef struct _zend_module_entry zend_module_entry;

// 作为zend模型入口类型使用的结构体
struct _zend_module_entry {
	unsigned short size;
	unsigned int zend_api;
	unsigned char zend_debug;
	unsigned char zts;
	const struct _zend_ini_entry *ini_entry;
	const struct _zend_module_dep *deps;
	const char *name;
	const struct _zend_function_entry *functions;
	int (*module_startup_func)(INIT_FUNC_ARGS);
	int (*module_shutdown_func)(SHUTDOWN_FUNC_ARGS);
	int (*request_startup_func)(INIT_FUNC_ARGS);
	int (*request_shutdown_func)(SHUTDOWN_FUNC_ARGS);
	void (*info_func)(ZEND_MODULE_INFO_FUNC_ARGS);
	const char *version;
	size_t globals_size;
# ifdef ZTS
	ts_rsrc_id* globals_id_ptr;
# else
	void* globals_ptr;
# endif
	void (*globals_ctor)(void *global);
	void (*globals_dtor)(void *global);
	int (*post_deactivate_func)(void);
	int module_started;
	unsigned char type;
	void *handle;
	int module_number;
	const char *build_id;
};


#define STANDARD_MODULE_HEADER 	STANDARD_MODULE_HEADER_EX, NULL, NULL

#define STANDARD_MODULE_HEADER_EX sizeof(zend_module_entry), ZEND_MODULE_API_NO, ZEND_DEBUG, USING_ZTS

#define ZEND_MODULE_API_NO 20151012

#ifdef ZTS
#define USING_ZTS 1
#else
#define USING_ZTS 0
#endif







